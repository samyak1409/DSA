Rough.py

# Will add problems I did from https://leetcode.com/problemset/all/?listId=wpwgkgt in the end:
Additional (From LeetCode List - Top Interview Questions)

# Will complete problems with topics that I haven't learnt after learning:
SDE Sheet/01) Arrays/003.1) Permutations.py/ (Backtracking)
SDE Sheet/01) Arrays/003.2) Permutations II.py/ (Backtracking)
SDE Sheet/01) Arrays/005.1) Wiggle Sort II.py/ (Maths)
SDE Sheet/01) Arrays/006.2) Best Time to Buy and Sell Stock with Cooldown.py/ (DP)
SDE Sheet/01) Arrays/014.2) Super Pow.py/ (Maths)
SDE Sheet/01) Arrays/017.1) Unique Paths II.py/ (DP)
SDE Sheet/01) Arrays/017.2) Minimum Path Sum.py/ (DP)
SDE Sheet/01) Arrays/017.4) Minimum Path Cost in a Grid.py/ (DP)
SDE Sheet/02) Linked List/027.1) Sort List.py/ (Merge Sort on LL)
SDE Sheet/02) Linked List/029.3) Sum of Two Integers.py/ (Bit Manipulation)
SDE Sheet/02) Linked List/038.1) Clone Graph.py/ (Graph)
Contests/02) Biweekly Contest 91/2) Count Ways To Build Good Strings.py/ (DP)
Contests/02) Biweekly Contest 91/3) Most Profitable Path in a Tree.py/ (Graph)
Contests/03) Weekly Contest 319/2) Number of Subarrays With LCM Equal to K.py/ (Maths)
Contests/04) Weekly Contest 320/1) Number of Unequal Triplets in Array.py/ (Maths)
Contests/04) Weekly Contest 320/3) Minimum Fuel Cost to Report to the Capital.py/ (Graph)
Contests/07) Weekly Contest 322/3) Minimum Score of a Path Between Two Cities.py/ (Graph)
Contests/11) Biweekly Contest 94/3) Minimize the Maximum of Two Arrays.py/ (Maths)
Contests/20) Biweekly Contest 97/3) Maximize Win From Two Segments.py/ (DP)
Contests/24) Weekly Contest 333/3) Count the Number of Square-Free Subsets.py/ (DP, Bitmask)
Contests/30) Weekly Contest 337/3) The Number of Beautiful Subsets.py/ (Backtracking)
Contests/32) Biweekly Contest 101/4) 2608. Shortest Cycle in a Graph.py/ (Graph)
Contests/39) Weekly Contest 343/3) 2662. Minimum Cost of a Path With Special Roads.py/ (Graph)
Contests/42) Weekly Contest 345/4) 2685. Count the Number of Complete Components.py/ (Graph)

# Will do problems with "Hard" difficulty in the end:
SDE Sheet/01) Arrays/018) Reverse Pairs.py
SDE Sheet/01) Arrays/040) Trapping Rain Water.py
SDE Sheet/02) Linked List/033) Reverse Nodes in k-Group.py
